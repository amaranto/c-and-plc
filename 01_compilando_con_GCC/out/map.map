
Discarded input sections

 .group         0x0000000000000000        0x8 out/main.o
 .group         0x0000000000000000        0x8 out/main.o
 .group         0x0000000000000000        0x8 out/main.o
 .group         0x0000000000000000        0x8 out/main.o
 .group         0x0000000000000000        0x8 out/main.o
 .group         0x0000000000000000        0x8 out/main.o
 .group         0x0000000000000000        0x8 out/cr_startup_lpc43xx.o
 .debug_macro   0x0000000000000000      0x898 out/cr_startup_lpc43xx.o

Memory Configuration

Name             Origin             Length             Attributes
MFlashA512       0x000000001a000000 0x0000000000080000 xr
MFlashB512       0x000000001b000000 0x0000000000080000 xr
RamLoc32         0x0000000010000000 0x0000000000008000 xrw
RamLoc40         0x0000000010080000 0x000000000000a000 xrw
RamAHB32         0x0000000020000000 0x0000000000008000 xrw
RamAHB16         0x0000000020008000 0x0000000000004000 xrw
RamAHB_ETB16     0x000000002000c000 0x0000000000004000 xrw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD out/main.o
LOAD out/cr_startup_lpc43xx.o
START GROUP
LOAD /usr/lib/gcc/arm-none-eabi/4.9.3/armv7e-m/softfp/libgcc.a
LOAD /usr/lib/gcc/arm-none-eabi/4.9.3/../../../arm-none-eabi/lib/armv7e-m/softfp/libc.a
LOAD /usr/lib/gcc/arm-none-eabi/4.9.3/../../../arm-none-eabi/lib/armv7e-m/softfp/libm.a
END GROUP
                0x000000001a080000                __top_MFlashA512 = 0x1a080000
                0x000000001b080000                __top_MFlashB512 = 0x1b080000
                0x0000000010008000                __top_RamLoc32 = 0x10008000
                0x000000001008a000                __top_RamLoc40 = 0x1008a000
                0x0000000020008000                __top_RamAHB32 = 0x20008000
                0x000000002000c000                __top_RamAHB16 = 0x2000c000
                0x0000000020010000                __top_RamAHB_ETB16 = 0x20010000

.text_Flash2    0x000000001b000000        0x0
 FILL mask 0xff
                0x000000001b000000                __core_m0app_START__ = .
 *(.core_m0app)
 *(.core_m0app.data_*)
 *(.core_m0app.data)
                0x000000001b000000                __core_m0app_END__ = .
 *(.text_Flash2*)
 *(.text_MFlashB512*)
 *(.text.$Flash2*)
 *(.text.$MFlashB512*)
 *(.rodata.$Flash2*)
 *(.rodata.$MFlashB512*)

.text           0x000000001a000000      0x3e4
 FILL mask 0xff
                0x000000001a000000                __vectors_start__ = ABSOLUTE (.)
 *(.isr_vector)
 .isr_vector    0x000000001a000000      0x114 out/cr_startup_lpc43xx.o
                0x000000001a000000                g_pfnVectors
                0x000000001a000114                . = ALIGN (0x4)
                0x000000001a000114                __section_table_start = .
                0x000000001a000114                __data_section_table = .
                0x000000001a000114        0x4 LONG 0x1a0003e4 LOADADDR (.data)
                0x000000001a000118        0x4 LONG 0x10000000 ADDR (.data)
                0x000000001a00011c        0x4 LONG 0x0 SIZEOF (.data)
                0x000000001a000120        0x4 LONG 0x1a0003e4 LOADADDR (.data_RAM2)
                0x000000001a000124        0x4 LONG 0x10080000 ADDR (.data_RAM2)
                0x000000001a000128        0x4 LONG 0x0 SIZEOF (.data_RAM2)
                0x000000001a00012c        0x4 LONG 0x1a0003e4 LOADADDR (.data_RAM3)
                0x000000001a000130        0x4 LONG 0x20000000 ADDR (.data_RAM3)
                0x000000001a000134        0x4 LONG 0x0 SIZEOF (.data_RAM3)
                0x000000001a000138        0x4 LONG 0x1a0003e4 LOADADDR (.data_RAM4)
                0x000000001a00013c        0x4 LONG 0x20008000 ADDR (.data_RAM4)
                0x000000001a000140        0x4 LONG 0x0 SIZEOF (.data_RAM4)
                0x000000001a000144        0x4 LONG 0x1a0003e4 LOADADDR (.data_RAM5)
                0x000000001a000148        0x4 LONG 0x2000c000 ADDR (.data_RAM5)
                0x000000001a00014c        0x4 LONG 0x0 SIZEOF (.data_RAM5)
                0x000000001a000150                __data_section_table_end = .
                0x000000001a000150                __bss_section_table = .
                0x000000001a000150        0x4 LONG 0x10000000 ADDR (.bss)
                0x000000001a000154        0x4 LONG 0x4 SIZEOF (.bss)
                0x000000001a000158        0x4 LONG 0x10080000 ADDR (.bss_RAM2)
                0x000000001a00015c        0x4 LONG 0x0 SIZEOF (.bss_RAM2)
                0x000000001a000160        0x4 LONG 0x20000000 ADDR (.bss_RAM3)
                0x000000001a000164        0x4 LONG 0x0 SIZEOF (.bss_RAM3)
                0x000000001a000168        0x4 LONG 0x20008000 ADDR (.bss_RAM4)
                0x000000001a00016c        0x4 LONG 0x0 SIZEOF (.bss_RAM4)
                0x000000001a000170        0x4 LONG 0x2000c000 ADDR (.bss_RAM5)
                0x000000001a000174        0x4 LONG 0x0 SIZEOF (.bss_RAM5)
                0x000000001a000178                __bss_section_table_end = .
                0x000000001a000178                __section_table_end = .
 *(.after_vectors*)
 .after_vectors
                0x000000001a000178       0xcc out/cr_startup_lpc43xx.o
                0x000000001a000178                data_init
                0x000000001a0001bc                bss_init
                0x000000001a0001f4                NMI_Handler
                0x000000001a0001fc                HardFault_Handler
                0x000000001a000204                MemManage_Handler
                0x000000001a00020c                BusFault_Handler
                0x000000001a000214                UsageFault_Handler
                0x000000001a00021c                SVC_Handler
                0x000000001a000224                DebugMon_Handler
                0x000000001a00022c                PendSV_Handler
                0x000000001a000234                SysTick_Handler
                0x000000001a00023c                TIMER2_IRQHandler
                0x000000001a00023c                RIT_IRQHandler
                0x000000001a00023c                ADCHS_IRQHandler
                0x000000001a00023c                FLASH_EEPROM_IRQHandler
                0x000000001a00023c                I2C0_IRQHandler
                0x000000001a00023c                SDIO_IRQHandler
                0x000000001a00023c                ATIMER_IRQHandler
                0x000000001a00023c                I2C1_IRQHandler
                0x000000001a00023c                UART1_IRQHandler
                0x000000001a00023c                GPIO5_IRQHandler
                0x000000001a00023c                CAN1_IRQHandler
                0x000000001a00023c                USB1_IRQHandler
                0x000000001a00023c                I2S0_IRQHandler
                0x000000001a00023c                TIMER3_IRQHandler
                0x000000001a00023c                UART0_IRQHandler
                0x000000001a00023c                SGPIO_IRQHandler
                0x000000001a00023c                ADC0_IRQHandler
                0x000000001a00023c                GPIO6_IRQHandler
                0x000000001a00023c                IntDefaultHandler
                0x000000001a00023c                GPIO1_IRQHandler
                0x000000001a00023c                SSP0_IRQHandler
                0x000000001a00023c                ADC1_IRQHandler
                0x000000001a00023c                RTC_IRQHandler
                0x000000001a00023c                TIMER0_IRQHandler
                0x000000001a00023c                SPI_IRQHandler
                0x000000001a00023c                LCD_IRQHandler
                0x000000001a00023c                TIMER1_IRQHandler
                0x000000001a00023c                UART2_IRQHandler
                0x000000001a00023c                GPIO2_IRQHandler
                0x000000001a00023c                I2S1_IRQHandler
                0x000000001a00023c                SSP1_IRQHandler
                0x000000001a00023c                USB0_IRQHandler
                0x000000001a00023c                GPIO3_IRQHandler
                0x000000001a00023c                SCT_IRQHandler
                0x000000001a00023c                WDT_IRQHandler
                0x000000001a00023c                GPIO7_IRQHandler
                0x000000001a00023c                SPIFI_IRQHandler
                0x000000001a00023c                QEI_IRQHandler
                0x000000001a00023c                ETH_IRQHandler
                0x000000001a00023c                CAN0_IRQHandler
                0x000000001a00023c                GINT0_IRQHandler
                0x000000001a00023c                DAC_IRQHandler
                0x000000001a00023c                M0SUB_IRQHandler
                0x000000001a00023c                GPIO0_IRQHandler
                0x000000001a00023c                DMA_IRQHandler
                0x000000001a00023c                EVRT_IRQHandler
                0x000000001a00023c                UART3_IRQHandler
                0x000000001a00023c                MCPWM_IRQHandler
                0x000000001a00023c                M0APP_IRQHandler
                0x000000001a00023c                GINT1_IRQHandler
                0x000000001a00023c                GPIO4_IRQHandler
                0x00000000000002fc                . = 0x2fc
 *fill*         0x000000001a000244       0xb8 ff
                0x000000001a0002fc                PROVIDE (__CRP_WORD_START__, .)
 *(.crp)
 .crp           0x000000001a0002fc        0x4 out/cr_startup_lpc43xx.o
                0x000000001a0002fc                CRP_WORD
                0x000000001a000300                PROVIDE (__CRP_WORD_END__, .)
                0x0000000000000001                ASSERT (! ((__CRP_WORD_START__ == __CRP_WORD_END__)), Linker CRP Enabled, but no CRP_WORD provided within application)
 *(.text*)
 .text          0x000000001a000300        0x0 out/main.o
 .text.SystemInit
                0x000000001a000300       0x18 out/main.o
                0x000000001a000300                SystemInit
 .text.main     0x000000001a000318        0x8 out/main.o
                0x000000001a000318                main
 .text          0x000000001a000320        0x0 out/cr_startup_lpc43xx.o
 .text.ResetISR
                0x000000001a000320       0xc4 out/cr_startup_lpc43xx.o
                0x000000001a000320                ResetISR
 *(.rodata .rodata.* .constdata .constdata.*)
                0x000000001a0003e4                . = ALIGN (0x4)

.glue_7         0x000000001a0003e4        0x0
 .glue_7        0x000000001a0003e4        0x0 linker stubs

.glue_7t        0x000000001a0003e4        0x0
 .glue_7t       0x000000001a0003e4        0x0 linker stubs

.vfp11_veneer   0x000000001a0003e4        0x0
 .vfp11_veneer  0x000000001a0003e4        0x0 linker stubs

.v4_bx          0x000000001a0003e4        0x0
 .v4_bx         0x000000001a0003e4        0x0 linker stubs

.iplt           0x000000001a0003e4        0x0
 .iplt          0x000000001a0003e4        0x0 out/main.o

.rel.dyn        0x000000001a0003e4        0x0
 .rel.iplt      0x000000001a0003e4        0x0 out/main.o

.ARM.extab
 *(.ARM.extab* .gnu.linkonce.armextab.*)
                0x000000001a0003e4                __exidx_start = .

.ARM.exidx
 *(.ARM.exidx* .gnu.linkonce.armexidx.*)
                0x000000001a0003e4                __exidx_end = .
                0x000000001a0003e4                _etext = .

.data_RAM2      0x0000000010080000        0x0 load address 0x000000001a0003e4
 FILL mask 0xff
                [!provide]                        PROVIDE (__start_data_RAM2, .)
 *(.ramfunc.$RAM2)
 *(.ramfunc.$RamLoc40)
 *(.data.$RAM2*)
 *(.data.$RamLoc40*)
                0x0000000010080000                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__end_data_RAM2, .)

.data_RAM3      0x0000000020000000        0x0 load address 0x000000001a0003e4
 FILL mask 0xff
                [!provide]                        PROVIDE (__start_data_RAM3, .)
 *(.ramfunc.$RAM3)
 *(.ramfunc.$RamAHB32)
 *(.data.$RAM3*)
 *(.data.$RamAHB32*)
                0x0000000020000000                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__end_data_RAM3, .)

.data_RAM4      0x0000000020008000        0x0 load address 0x000000001a0003e4
 FILL mask 0xff
                [!provide]                        PROVIDE (__start_data_RAM4, .)
 *(.ramfunc.$RAM4)
 *(.ramfunc.$RamAHB16)
 *(.data.$RAM4*)
 *(.data.$RamAHB16*)
                0x0000000020008000                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__end_data_RAM4, .)

.data_RAM5      0x000000002000c000        0x0 load address 0x000000001a0003e4
 FILL mask 0xff
                [!provide]                        PROVIDE (__start_data_RAM5, .)
 *(.ramfunc.$RAM5)
 *(.ramfunc.$RamAHB_ETB16)
 *(.data.$RAM5*)
 *(.data.$RamAHB_ETB16*)
                0x000000002000c000                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__end_data_RAM5, .)

.uninit_RESERVED
                0x0000000010000000        0x0
 *(.bss.$RESERVED*)
                0x0000000010000000                . = ALIGN (0x4)
                0x0000000010000000                _end_uninit_RESERVED = .

.data           0x0000000010000000        0x0 load address 0x000000001a0003e4
 FILL mask 0xff
                0x0000000010000000                _data = .
 *(vtable)
 *(.ramfunc*)
 *(.data*)
 .data          0x0000000010000000        0x0 out/main.o
 .data          0x0000000010000000        0x0 out/cr_startup_lpc43xx.o
                0x0000000010000000                . = ALIGN (0x4)
                0x0000000010000000                _edata = .

.igot.plt       0x0000000010000000        0x0 load address 0x000000001a0003e4
 .igot.plt      0x0000000010000000        0x0 out/main.o

.bss_RAM2       0x0000000010080000        0x0
                [!provide]                        PROVIDE (__start_bss_RAM2, .)
 *(.bss.$RAM2*)
 *(.bss.$RamLoc40*)
                0x0000000010080000                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__end_bss_RAM2, .)

.bss_RAM3       0x0000000020000000        0x0
                [!provide]                        PROVIDE (__start_bss_RAM3, .)
 *(.bss.$RAM3*)
 *(.bss.$RamAHB32*)
                0x0000000020000000                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__end_bss_RAM3, .)

.bss_RAM4       0x0000000020008000        0x0
                [!provide]                        PROVIDE (__start_bss_RAM4, .)
 *(.bss.$RAM4*)
 *(.bss.$RamAHB16*)
                0x0000000020008000                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__end_bss_RAM4, .)

.bss_RAM5       0x000000002000c000        0x0
                [!provide]                        PROVIDE (__start_bss_RAM5, .)
 *(.bss.$RAM5*)
 *(.bss.$RamAHB_ETB16*)
                0x000000002000c000                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__end_bss_RAM5, .)

.bss            0x0000000010000000        0x4
                0x0000000010000000                _bss = .
 *(.bss*)
 .bss           0x0000000010000000        0x0 out/main.o
 .bss.count     0x0000000010000000        0x4 out/main.o
 .bss           0x0000000010000004        0x0 out/cr_startup_lpc43xx.o
 *(COMMON)
                0x0000000010000004                . = ALIGN (0x4)
                0x0000000010000004                _ebss = .
                [!provide]                        PROVIDE (end, .)

.noinit_RAM2    0x0000000010080000        0x0
 *(.noinit.$RAM2*)
 *(.noinit.$RamLoc40*)
                0x0000000010080000                . = ALIGN (0x4)

.noinit_RAM3    0x0000000020000000        0x0
 *(.noinit.$RAM3*)
 *(.noinit.$RamAHB32*)
                0x0000000020000000                . = ALIGN (0x4)

.noinit_RAM4    0x0000000020008000        0x0
 *(.noinit.$RAM4*)
 *(.noinit.$RamAHB16*)
                0x0000000020008000                . = ALIGN (0x4)

.noinit_RAM5    0x000000002000c000        0x0
 *(.noinit.$RAM5*)
 *(.noinit.$RamAHB_ETB16*)
                0x000000002000c000                . = ALIGN (0x4)

.noinit         0x0000000010000004        0x0
                0x0000000010000004                _noinit = .
 *(.noinit*)
                0x0000000010000004                . = ALIGN (0x4)
                0x0000000010000004                _end_noinit = .
                [!provide]                        PROVIDE (_pvHeapStart, DEFINED (__user_heap_base)?__user_heap_base:.)
                0x0000000010007fe0                PROVIDE (_vStackTop, DEFINED (__user_stack_top)?__user_stack_top:(__top_RamLoc32 - 0x20))
                [!provide]                        PROVIDE (__valid_user_code_checksum, (0x0 - ((((((_vStackTop + (ResetISR + 0x1)) + (NMI_Handler + 0x1)) + (HardFault_Handler + 0x1)) + (DEFINED (MemManage_Handler)?MemManage_Handler:0x0 + 0x1)) + (DEFINED (BusFault_Handler)?BusFault_Handler:0x0 + 0x1)) + (DEFINED (UsageFault_Handler)?UsageFault_Handler:0x0 + 0x1))))
OUTPUT(blinky_sin_makefile.axf elf32-littlearm)

.debug_info     0x0000000000000000      0x365
 .debug_info    0x0000000000000000       0xbd out/main.o
 .debug_info    0x00000000000000bd      0x2a8 out/cr_startup_lpc43xx.o

.debug_abbrev   0x0000000000000000      0x168
 .debug_abbrev  0x0000000000000000       0x7b out/main.o
 .debug_abbrev  0x000000000000007b       0xed out/cr_startup_lpc43xx.o

.debug_aranges  0x0000000000000000       0xa8
 .debug_aranges
                0x0000000000000000       0x28 out/main.o
 .debug_aranges
                0x0000000000000028       0x80 out/cr_startup_lpc43xx.o

.debug_ranges   0x0000000000000000       0x88
 .debug_ranges  0x0000000000000000       0x18 out/main.o
 .debug_ranges  0x0000000000000018       0x70 out/cr_startup_lpc43xx.o

.debug_macro    0x0000000000000000      0xc59
 .debug_macro   0x0000000000000000       0x54 out/main.o
 .debug_macro   0x0000000000000054      0x898 out/main.o
 .debug_macro   0x00000000000008ec       0x22 out/main.o
 .debug_macro   0x000000000000090e       0x44 out/main.o
 .debug_macro   0x0000000000000952       0xe3 out/main.o
 .debug_macro   0x0000000000000a35       0x22 out/main.o
 .debug_macro   0x0000000000000a57      0x1df out/main.o
 .debug_macro   0x0000000000000c36       0x23 out/cr_startup_lpc43xx.o

.debug_line     0x0000000000000000      0x20a
 .debug_line    0x0000000000000000      0x115 out/main.o
 .debug_line    0x0000000000000115       0xf5 out/cr_startup_lpc43xx.o

.debug_str      0x0000000000000000     0x31d9
 .debug_str     0x0000000000000000     0x2fd6 out/main.o
                                       0x3139 (size before relaxing)
 .debug_str     0x0000000000002fd6      0x203 out/cr_startup_lpc43xx.o
                                       0x26ba (size before relaxing)

.comment        0x0000000000000000       0x38
 .comment       0x0000000000000000       0x38 out/main.o
                                         0x39 (size before relaxing)
 .comment       0x0000000000000038       0x39 out/cr_startup_lpc43xx.o

.ARM.attributes
                0x0000000000000000       0x37
 .ARM.attributes
                0x0000000000000000       0x37 out/main.o
 .ARM.attributes
                0x0000000000000037       0x37 out/cr_startup_lpc43xx.o

.debug_frame    0x0000000000000000      0x1b8
 .debug_frame   0x0000000000000000       0x48 out/main.o
 .debug_frame   0x0000000000000048      0x170 out/cr_startup_lpc43xx.o
